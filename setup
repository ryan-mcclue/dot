#!/bin/sh
# SPDX-License-Identifier: zlib-acknowledgement

_dark_red_fg='\e[01;31m'
_colour_reset='\e[0m'

xmsg() {
  printf "${_dark_red_fg}\
${1}\n\
${_colour_reset}" >&2
  exit 1
}

xinstalled() {
  for program in "$@"; do
    command -v "${program}" >/dev/null 2>&1 || \
      xmsg "Require ${program} to be installed.\n\
Run: xargs -a requirements.txt sudo apt install"
  done
}

# --------------------------- Verify System State ---------------------------

test "$(id -u)" -eq 0 && \
  xmsg "Cannot be root to import gpg/ssh keys for user!"

test ! -f 'private-key.asc' && \
  xmsg "Require gpg private-key.asc to be in ${PWD}"

test ! -f '.ssh/id_rsa' -o ! -f '.ssh/id_rsa.pub' && \
  xmsg "Require .ssh folder to be populated in ${PWD}"

xinstalled 'dconf' 'gsettings' 'wget' 'gnome-terminal' \
  'git' 'gpg' 'ssh' 'terminator' 'vim' 'gcc'

# --------------------------- Setup Configuration Files ---------------------------
gpg --import private-key.asc
mkdir ~/.ssh
cp -r .ssh/. ~/.ssh 
chmod 600 ~/.ssh/id_rsa 
ssh-add

git clone \
  'https://github.com/aruhier/gnome-terminal-colors-solarized.git'
(
cd 'gnome-terminal-colors-solarized'
./install.sh --install-dircolors
)
rm -rf 'gnome-terminal-colors-solarized'

ln -sf '.bashrc' "$HOME/.bashrc"
ln -sf '.inputrc' "$HOME/.inputrc"
ln -sf '.gdbinit' "$HOME/.gdbinit"
mkdir -p "$HOME/.config/terminator"
ln -sf 'terminator/config' "$HOME/.config/terminator/config"

ln -sf '.vimrc' "$HOME/.vimrc"
mkdir -p "$HOME/.vim/colors"
git clone 'https://github.com/altercation/vim-colors-solarized.git'
(
cd 'vim-colors-solarized'
cp 'colors/solarized.vim' "$HOME/.vim/colors/"
)
rm -rf 'vim-colors-solarized'

# --------------------------- Configure Git ---------------------------
mkdir -p "$HOME/.git_templates/hooks"
ln -sf "git/.git_templates/hooks/pre-commit" "$HOME/.git_templates/hooks/pre-commit"
ln -sf "git/.gitmessage" "$HOME/.gitmessage"

git config --global user.name "Ryan McClue"
git config --global user.email "re.mcclue@protonmail.com"

gpg_keyid=$(gpg --list-keys | sed -n 4p)
git config --global user.signingkey "$gpg_keyid"

gpg_loc=$(command -v gpg)
git config --global gpg.program "$gpg_loc"

git config --global init.templatedir "$HOME/.git_templates"
git config --global commit.template "$HOME/.gitmessage"
git config --global commit.gpgsign true
git config --global diff.tool vimdiff
# NOTE(Ryan): This reorders the default vimdiff windows, i.e. the staged file is on the left.
git config --global difftool.vimdiff.cmd 'vim -f -d -c "wincmd h" -c '\''cd "$GIT_PREFIX"'\'' "$REMOTE" "$LOCAL"'
# NOTE(Ryan): This allows the use of :cquit to exit the entire diff process.
git config --global difftool.trustExitCode true
git config --global difftool.prompt false
git config --global push.default simple
git config --global pull.rebase true
git config --global alias.adog "log --all --decorate --oneline --graph" 
git config --global merge.tool vimdiff
git config --global merge.conflictstyle diff3
git config --global mergetool.prompt false

# --------------------------- Setup Directory Structure ---------------------------
mkdir -p "$HOME/prog/personal" \
  "$HOME/prog/apps" \
  "$HOME/prog/sources" \
  "$HOME/prog/toolchains"
