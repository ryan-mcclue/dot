#!/bin/sh

# SPDX-License-Identifier: zlib-acknowledgement
_dark_red_fg='\e[01;31m'
_colour_reset='\e[0m'

xmsg() {
  printf "${_dark_red_fg}\
${1}\n\
${_colour_reset}" >&2
  exit 1
}

xinstalled() {
  for program in "$@"; do
    command -v "${program}" >/dev/null 2>&1 || \
      xmsg "REQUIRE ${program} TO BE INSTALLED"
  done
}

# --------------------------- Verify System State ---------------------------

test ${EUID} -eq 0 && \
  xmsg "CANNOT BE ROOT TO IMPORT GPG/SSH KEYS FOR USER!"

test ! -f 'private-key.asc' && \
  xmsg "REQUIRE GPG PRIVATE-KEY.ASC TO BE IN ${PWD}"

test ! -f '.ssh/id_rsa' -o ! -f '.ssh/id_rsa.pub' && \
  xmsg "REQUIRE .SSH FOLDER TO BE POPULATED IN ${PWD}"

xinstalled 'git' 'gpg' 'ssh' 'gnome-terminal' 'terminator' 'vim' 'gcc'

# --------------------------- Setup Configuration Files ---------------------------
gpg --import private-key.asc
mkdir ~/.ssh
cp -r .ssh/. ~/.ssh 
chmod 600 ~/.ssh/id_rsa 
ssh-add

git clone \
  'https://github.com/aruhier/gnome-terminal-colors-solarized.git'
cd 'gnome-terminal-colors-solarized'
./install.sh --install-dircolors
cd -
rm -rf 'gnome-terminal-colors-solarized'

ln -sf "~/.bashrc" '.bashrc'
ln -sf "~/.inputrc" '.inputrc'
ln -sf "~/.gdbinit" '.gdbinit'
ln -sf "~/.vimrc" 'vim/.vimrc'
mkdir -p "~/.vim/colors"
ln -sf "~/.vim/colors/solarized.vim" 'vim/solarized.vim' 
ln -sf "~/.config/terminator/config" 'terminator/config'

# --------------------------- Configure Git ---------------------------
ln -sf "~/.git/" 

git config --global user.name "Ryan McClue"
git config --global user.email "re.mcclue@protonmail.com"

gpg_keyid=$(gpg --list-keys | sed -n 4p)
git config --global user.signingkey ${gpg_keyid}

gpg_loc=$(which gpg)
git config --global gpg.program ${gpg_loc}

# Ensure the .git-templates/hooks are executable
ln -sf 
git config --global init.templatedir '~/.git_templates'
git config --global commit.template '~/.gitmessage'  

git config --global commit.gpgsign true
git config --global diff.tool vimdiff
# NOTE(Ryan): This reorders the default vimdiff windows, i.e. the staged file is on the left.
git config --global difftool.vimdiff.cmd 'vim -f -d -c "wincmd h" -c '\''cd "$GIT_PREFIX"'\'' "$REMOTE" "$LOCAL"'
# NOTE(Ryan): This allows the use of :cquit to exit the entire diff process.
git config --global difftool.trustExitCode true
git config --global difftool.prompt false
git config --global push.default simple
git config --global pull.rebase true
git config --global alias.adog "log --all --decorate --oneline --graph" 
git config --global merge.tool vimdiff
git config --global merge.conflictstyle diff3
git config --global mergetool.prompt false

# add my proper 
# sudo add-apt-repository ppa:ryan-mcclue/ppa-test -y

# --------------------------- Setup Directory Structure ---------------------------
mkdir -p "~/prog/personal" \
  "~/prog/apps" \
  "~/prog/sources" \
  "~/prog/toolchains"

git clone scripts
