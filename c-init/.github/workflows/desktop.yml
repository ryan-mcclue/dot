name: desktop 
run-name: ${{ github.actor }} run
on: [push]

# Once build system stabilises, set up own docker image for speed
jobs:
  ubuntu:
    runs-on: ubuntu-latest
    steps:
      - run: echo "${{ runner.os }}->${{ github.event_name }}->${{ github.ref }}"
      - name: Clone repo
        uses: actions/checkout@v4
      - name: Obtain deps
        run: sudo apt -y install libcmocka-dev gcovr
      - name: Setup release build
        run: |
          mkdir private
          echo 'param_mode="release"' > private/build-params
      - name: Build tests
        run: bash misc/build "tests"
      - name: Run tests
        run: |
          ./build/desktop-tests-release
          # TODO(Ryan): Why gcov CI name files differently to local?
          mv -f build/desktop-tests-release-desktop-tests.gcno build/desktop-tests.gcno
          mv -f build/desktop-tests-release-desktop-tests.gcda build/desktop-tests.gcda
          gcov -b -o build/ code/desktop-tests.cpp >/dev/null
          gcovr -e "code/base/.*\.h" 
      - name: Build app
        run: bash misc/build "app"
      - name: Run app
        run: ./build/desktop-release
      # |
      # ./build/desktop-release &
      # pid=$!
      # sleep 3
      # kill $pid 2>/dev/null || echo "Running app failed" && exit 1
      - name: Run analyser
        run: |
          echo 'param_analyse="true"' >> private/build-params
          bash misc/build "app"

# macos:
#   runs-on: macos-latest
#   steps:
#     - name: Clone repo
#       uses: actions/checkout@v4
#     - name: Build
#       run: clang -o nob nob.c
#     - name: Upload build folder
#       uses: actions/upload-artifact@v3
#       with:
#         name: macos-build-folder
#         path: build/
# ubuntu:
#   strategy:
#     matrix:
#       cc: [gcc, clang]
# windows:
#   runs-on: windows-latest
#   steps:
#     - name: Clone repo
#       uses: actions/checkout@v4
#     - name: Build
#       shell: cmd
#       run: |
#         call "C:\\Program Files\\Microsoft Visual Studio\\2022\\Enterprise\\VC\\Auxiliary\\Build\\vcvars64.bat"
#         cl.exe -o nob.exe nob.c
