{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "Launch Desktop",
            "preLaunchTask": "compile",
            "type": "cppdbg",
            "request": "launch",
            "stopAtEntry": false,
            "args": [],
            "cwd": "${workspaceFolder}",
            "program": "${workspaceFolder}/build/${input:getExecutable}",
         "miDebuggerPath": "/usr/bin/gdb"
        },
        {
          // add to ~/.config/Code/User/keybindings.json
          //  {
          //      "key": "ctrl+shift+t",
          //      "command": "launches.LaunchTestsDebugger"
          //  }
            "name": "Launch Tests",
            "preLaunchTask": "tests",
            "type": "cppdbg",
            "request": "launch",
            "stopAtEntry": false,
            "args": [],
            "cwd": "${workspaceFolder}",
            "program": "${workspaceFolder}/build/${input:getExecutable}",
         "miDebuggerPath": "/usr/bin/gdb"
        },
        {
            "name": "Launch Embedded",
            "preLaunchTask": "initServer",
            "type": "cppdbg",
            "request": "launch",
            "stopAtEntry": false,
            "args": [],
            "cwd": "${workspaceFolder}/build",
            "program": "${workspaceFolder}/build/hello-world-debug.elf",
            "miDebuggerPath": "${userHome}/.espressif/tools/xtensa-esp-elf-gdb/12.1_20231023/xtensa-esp-elf-gdb/bin/xtensa-esp32-elf-gdb",
            "setupCommands": [
                {"text": "target remote 127.0.0.1:3333"},
                {"text": "set remote hardware-watchpoint-limit 2", "ignoreFailures": true},
                {"text": "monitor reset halt"}, // non-standard command for embedded servers, e.g. openOCD to reset MCU
                {"text": "flushregs"}, // ensure gdb has correct register values after MCU reset
                {"text": "mon program_esp build/bootloader/bootloader.bin 0x1000 verify"},
                {"text": "mon program_esp build/partition_table/partition-table.bin 0x8000 verify"},
                {"text": "mon program_esp build/hello_world.bin 0x10000 verify"},
                {"text": "monitor reset halt"},
                {"text": "flushregs"}
            ]
        }
    ],
// Tasks Shell Input extension
"inputs": [
    {
        "id": "getExecutable",
        "type": "command",
        "command": "shellCommand.execute",
        "args": {
            // NOTE(Ryan): Find most recently modified elf file; assumes shared objects will end with .so
            "command": "find build/ -maxdepth 1 -type f -executable -not -name \"*.*\" -printf \"%T@ %P\\n\" | sort -n | tail -n1 | cut -d\" \" -f2",
            "useFirstResult": true
        }
    }
]
}
